// <auto-generated />
using System;
using Jobsity.Chatroom.WebApi.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jobsity.Chatroom.WebApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220606225356_AddBotUser")]
    partial class AddBotUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Jobsity.Chatroom.WebApi.Model.Chatroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chatrooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56f67c8d-9233-4c0a-8326-c6e252ea15e7"),
                            Created = new DateTime(2022, 6, 6, 19, 53, 55, 916, DateTimeKind.Local).AddTicks(3175),
                            Name = "Chatroom 1"
                        });
                });

            modelBuilder.Entity("Jobsity.Chatroom.WebApi.Model.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChatroomId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Jobsity.Chatroom.WebApi.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ab9570a-80fa-43a4-adb7-2aea3e64ebf5"),
                            Name = "user1",
                            Password = "a2FpcUtBUzY1MTEyLTFrbJfLJVJXdqn9noF3GwDzW/kF7QQ8"
                        },
                        new
                        {
                            Id = new Guid("2aad878b-6c32-4a34-a0bc-59d651b60546"),
                            Name = "user2",
                            Password = "a2FpcUtBUzY1MTEyLTFrbJfLJVJXdqn9noF3GwDzW/kF7QQ8"
                        },
                        new
                        {
                            Id = new Guid("6bf7ef1e-64ea-4888-83d3-2e7d89c98b72"),
                            Name = "botUser",
                            Password = "a2FpcUtBUzY1MTEyLTFrbJfLJVJXdqn9noF3GwDzW/kF7QQ8"
                        });
                });

            modelBuilder.Entity("Jobsity.Chatroom.WebApi.Model.Message", b =>
                {
                    b.HasOne("Jobsity.Chatroom.WebApi.Model.Chatroom", "Chatroom")
                        .WithMany()
                        .HasForeignKey("ChatroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jobsity.Chatroom.WebApi.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chatroom");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
